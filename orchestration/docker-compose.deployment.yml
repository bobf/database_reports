---
version: '3.7'
services:
  app:
    image: "${DOCKER_ORGANIZATION}/${DOCKER_REPOSITORY}:${DOCKER_TAG}"
    environment:
      RAILS_LOG_TO_STDOUT: '1'
      RAILS_SERVE_STATIC_FILES: '1'
      WEB_PRELOAD_APP: '1'
      WEB_HEALTHCHECK_PATH: "/healthcheck"
      WEB_PORT: 8080
      DATABASE_URL: postgresql://postgres:password@database-local:5432/production
      HOST_UID:
      RAILS_ENV:
      SECRET_KEY_BASE:
      WEB_CONCURRENCY:
      WEB_TIMEOUT:
      WEB_WORKER_PROCESSES:
      REDIS_URL: redis://redis-local:6379
    ports:
    - "${PUBLISH_PORT:?PUBLISH_PORT must be provided}:8080"
    deploy:
      mode: replicated
      replicas: "${REPLICAS:-3}"
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: '5'
    networks:
      local:
        aliases:
        - app-local
  database:
    image: library/postgres
    environment:
      POSTGRES_PASSWORD: password
      PGDATA: "/var/pgdata"
      REDIS_URL: redis://redis-local:6379
    networks:
      local:
        aliases:
        - database-local
    volumes:
    - database:/var/pgdata
  redis:
    image: library/redis:7.0
    networks:
      local:
        aliases:
        - redis-local
volumes:
  database: {}
networks:
  local:
    name: "${COMPOSE_PROJECT_NAME}"
