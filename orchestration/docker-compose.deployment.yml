---
version: '3.7'
services:
  app:
    image: "${DOCKER_ORGANIZATION}/${DOCKER_REPOSITORY}:${DOCKER_TAG}"
    environment:
      RAILS_LOG_TO_STDOUT: '1'
      RAILS_SERVE_STATIC_FILES: '1'
      WEB_PRELOAD_APP: '1'
      WEB_HEALTHCHECK_PATH: "/healthcheck"
      WEB_PORT: 8080
      DATABASE_URL: postgresql://postgres:password@database-local:5432/production
      HOST_UID:
      RAILS_ENV:
      SECRET_KEY_BASE:
      WEB_CONCURRENCY:
      WEB_TIMEOUT:
      WEB_WORKER_PROCESSES:
      REPORTS_DATABASE_URL:
      MAILER_FROM_ADDRESS:
      MAILER_URL_PROTOCOL:
      MAILER_URL_HOST:
      MAILER_SMTP_HOST:
      MAILER_SMTP_PORT:
      MAILER_SMTP_DOMAIN:
    ports:
    - "${PUBLISH_PORT:?PUBLISH_PORT must be provided}:8080"
    deploy:
      mode: replicated
      replicas: "${REPLICAS:-3}"
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: '5'
    networks:
      local:
        aliases:
        - app-local
  worker:
    image: "${DOCKER_ORGANIZATION}/${DOCKER_REPOSITORY}:${DOCKER_TAG}"
    healthcheck:
      disable: true
    environment:
      RAILS_LOG_TO_STDOUT: '1'
      DATABASE_URL: postgresql://postgres:password@database-local:5432/production
      HOST_UID:
      RAILS_ENV:
      SECRET_KEY_BASE:
      WEB_CONCURRENCY:
      WEB_TIMEOUT:
      WEB_WORKER_PROCESSES:
      REPORTS_DATABASE_URL:
      MAILER_FROM_ADDRESS:
      MAILER_URL_PROTOCOL:
      MAILER_URL_HOST:
      MAILER_SMTP_HOST:
      MAILER_SMTP_PORT:
      MAILER_SMTP_DOMAIN:
    deploy:
      mode: replicated
      replicas: 1
    networks:
      local:
        aliases:
        - worker-local
    command:
      - bundle
      - exec
      - rake
      - reports:worker
  database:
    image: library/postgres:14
    environment:
      POSTGRES_PASSWORD: password
      PGDATA: "/var/pgdata"
    networks:
      local:
        aliases:
        - database-local
    volumes:
    - database:/var/pgdata

volumes:
  database: {}
networks:
  local:
    name: "${COMPOSE_PROJECT_NAME}"
